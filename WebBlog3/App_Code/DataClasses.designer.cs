#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Test3ASP.NET")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertAuthor_CategoryTBx(Author_CategoryTBx instance);
  partial void UpdateAuthor_CategoryTBx(Author_CategoryTBx instance);
  partial void DeleteAuthor_CategoryTBx(Author_CategoryTBx instance);
  partial void InsertAuthorTBx(AuthorTBx instance);
  partial void UpdateAuthorTBx(AuthorTBx instance);
  partial void DeleteAuthorTBx(AuthorTBx instance);
  partial void InsertBookTBx(BookTBx instance);
  partial void UpdateBookTBx(BookTBx instance);
  partial void DeleteBookTBx(BookTBx instance);
  partial void InsertCategoryTBx(CategoryTBx instance);
  partial void UpdateCategoryTBx(CategoryTBx instance);
  partial void DeleteCategoryTBx(CategoryTBx instance);
  partial void InsertImageTBx(ImageTBx instance);
  partial void UpdateImageTBx(ImageTBx instance);
  partial void DeleteImageTBx(ImageTBx instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Test3ASP_NETConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Author_CategoryTBx> Author_CategoryTBxes
	{
		get
		{
			return this.GetTable<Author_CategoryTBx>();
		}
	}
	
	public System.Data.Linq.Table<AuthorTBx> AuthorTBxes
	{
		get
		{
			return this.GetTable<AuthorTBx>();
		}
	}
	
	public System.Data.Linq.Table<BookTBx> BookTBxes
	{
		get
		{
			return this.GetTable<BookTBx>();
		}
	}
	
	public System.Data.Linq.Table<CategoryTBx> CategoryTBxes
	{
		get
		{
			return this.GetTable<CategoryTBx>();
		}
	}
	
	public System.Data.Linq.Table<ImageTBx> ImageTBxes
	{
		get
		{
			return this.GetTable<ImageTBx>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Author_CategoryTBx")]
public partial class Author_CategoryTBx : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AuthorID;
	
	private int _CategoryID;
	
	private EntityRef<AuthorTBx> _AuthorTBx;
	
	private EntityRef<CategoryTBx> _CategoryTBx;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuthorIDChanging(int value);
    partial void OnAuthorIDChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    #endregion
	
	public Author_CategoryTBx()
	{
		this._AuthorTBx = default(EntityRef<AuthorTBx>);
		this._CategoryTBx = default(EntityRef<CategoryTBx>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int AuthorID
	{
		get
		{
			return this._AuthorID;
		}
		set
		{
			if ((this._AuthorID != value))
			{
				if (this._AuthorTBx.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAuthorIDChanging(value);
				this.SendPropertyChanging();
				this._AuthorID = value;
				this.SendPropertyChanged("AuthorID");
				this.OnAuthorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int CategoryID
	{
		get
		{
			return this._CategoryID;
		}
		set
		{
			if ((this._CategoryID != value))
			{
				if (this._CategoryTBx.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCategoryIDChanging(value);
				this.SendPropertyChanging();
				this._CategoryID = value;
				this.SendPropertyChanged("CategoryID");
				this.OnCategoryIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AuthorTBx_Author_CategoryTBx", Storage="_AuthorTBx", ThisKey="AuthorID", OtherKey="ID", IsForeignKey=true)]
	public AuthorTBx AuthorTBx
	{
		get
		{
			return this._AuthorTBx.Entity;
		}
		set
		{
			AuthorTBx previousValue = this._AuthorTBx.Entity;
			if (((previousValue != value) 
						|| (this._AuthorTBx.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._AuthorTBx.Entity = null;
					previousValue.Author_CategoryTBxes.Remove(this);
				}
				this._AuthorTBx.Entity = value;
				if ((value != null))
				{
					value.Author_CategoryTBxes.Add(this);
					this._AuthorID = value.ID;
				}
				else
				{
					this._AuthorID = default(int);
				}
				this.SendPropertyChanged("AuthorTBx");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategoryTBx_Author_CategoryTBx", Storage="_CategoryTBx", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true)]
	public CategoryTBx CategoryTBx
	{
		get
		{
			return this._CategoryTBx.Entity;
		}
		set
		{
			CategoryTBx previousValue = this._CategoryTBx.Entity;
			if (((previousValue != value) 
						|| (this._CategoryTBx.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CategoryTBx.Entity = null;
					previousValue.Author_CategoryTBxes.Remove(this);
				}
				this._CategoryTBx.Entity = value;
				if ((value != null))
				{
					value.Author_CategoryTBxes.Add(this);
					this._CategoryID = value.ID;
				}
				else
				{
					this._CategoryID = default(int);
				}
				this.SendPropertyChanged("CategoryTBx");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuthorTBx")]
public partial class AuthorTBx : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private string _Desc;
	
	private string _Email;
	
	private System.Nullable<int> _Phone;
	
	private System.Nullable<int> _Status;
	
	private EntitySet<Author_CategoryTBx> _Author_CategoryTBxes;
	
	private EntitySet<BookTBx> _BookTBxes;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(System.Nullable<int> value);
    partial void OnPhoneChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
	
	public AuthorTBx()
	{
		this._Author_CategoryTBxes = new EntitySet<Author_CategoryTBx>(new Action<Author_CategoryTBx>(this.attach_Author_CategoryTBxes), new Action<Author_CategoryTBx>(this.detach_Author_CategoryTBxes));
		this._BookTBxes = new EntitySet<BookTBx>(new Action<BookTBx>(this.attach_BookTBxes), new Action<BookTBx>(this.detach_BookTBxes));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NVarChar(MAX)")]
	public string Desc
	{
		get
		{
			return this._Desc;
		}
		set
		{
			if ((this._Desc != value))
			{
				this.OnDescChanging(value);
				this.SendPropertyChanging();
				this._Desc = value;
				this.SendPropertyChanged("Desc");
				this.OnDescChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="Int")]
	public System.Nullable<int> Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
	public System.Nullable<int> Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AuthorTBx_Author_CategoryTBx", Storage="_Author_CategoryTBxes", ThisKey="ID", OtherKey="AuthorID")]
	public EntitySet<Author_CategoryTBx> Author_CategoryTBxes
	{
		get
		{
			return this._Author_CategoryTBxes;
		}
		set
		{
			this._Author_CategoryTBxes.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AuthorTBx_BookTBx", Storage="_BookTBxes", ThisKey="ID", OtherKey="AuthorID")]
	public EntitySet<BookTBx> BookTBxes
	{
		get
		{
			return this._BookTBxes;
		}
		set
		{
			this._BookTBxes.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Author_CategoryTBxes(Author_CategoryTBx entity)
	{
		this.SendPropertyChanging();
		entity.AuthorTBx = this;
	}
	
	private void detach_Author_CategoryTBxes(Author_CategoryTBx entity)
	{
		this.SendPropertyChanging();
		entity.AuthorTBx = null;
	}
	
	private void attach_BookTBxes(BookTBx entity)
	{
		this.SendPropertyChanging();
		entity.AuthorTBx = this;
	}
	
	private void detach_BookTBxes(BookTBx entity)
	{
		this.SendPropertyChanging();
		entity.AuthorTBx = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookTBx")]
public partial class BookTBx : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private string _ShortDesc;
	
	private string _Desc;
	
	private System.Nullable<int> _Price;
	
	private System.Nullable<int> _Status;
	
	private System.Nullable<int> _AuthorID;
	
	private EntitySet<ImageTBx> _ImageTBxes;
	
	private EntityRef<AuthorTBx> _AuthorTBx;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortDescChanging(string value);
    partial void OnShortDescChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    partial void OnPriceChanging(System.Nullable<int> value);
    partial void OnPriceChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnAuthorIDChanging(System.Nullable<int> value);
    partial void OnAuthorIDChanged();
    #endregion
	
	public BookTBx()
	{
		this._ImageTBxes = new EntitySet<ImageTBx>(new Action<ImageTBx>(this.attach_ImageTBxes), new Action<ImageTBx>(this.detach_ImageTBxes));
		this._AuthorTBx = default(EntityRef<AuthorTBx>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDesc", DbType="NVarChar(1000)")]
	public string ShortDesc
	{
		get
		{
			return this._ShortDesc;
		}
		set
		{
			if ((this._ShortDesc != value))
			{
				this.OnShortDescChanging(value);
				this.SendPropertyChanging();
				this._ShortDesc = value;
				this.SendPropertyChanged("ShortDesc");
				this.OnShortDescChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NVarChar(MAX)")]
	public string Desc
	{
		get
		{
			return this._Desc;
		}
		set
		{
			if ((this._Desc != value))
			{
				this.OnDescChanging(value);
				this.SendPropertyChanging();
				this._Desc = value;
				this.SendPropertyChanged("Desc");
				this.OnDescChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int")]
	public System.Nullable<int> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
	public System.Nullable<int> Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorID", DbType="Int")]
	public System.Nullable<int> AuthorID
	{
		get
		{
			return this._AuthorID;
		}
		set
		{
			if ((this._AuthorID != value))
			{
				if (this._AuthorTBx.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAuthorIDChanging(value);
				this.SendPropertyChanging();
				this._AuthorID = value;
				this.SendPropertyChanged("AuthorID");
				this.OnAuthorIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookTBx_ImageTBx", Storage="_ImageTBxes", ThisKey="ID", OtherKey="BookID")]
	public EntitySet<ImageTBx> ImageTBxes
	{
		get
		{
			return this._ImageTBxes;
		}
		set
		{
			this._ImageTBxes.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AuthorTBx_BookTBx", Storage="_AuthorTBx", ThisKey="AuthorID", OtherKey="ID", IsForeignKey=true)]
	public AuthorTBx AuthorTBx
	{
		get
		{
			return this._AuthorTBx.Entity;
		}
		set
		{
			AuthorTBx previousValue = this._AuthorTBx.Entity;
			if (((previousValue != value) 
						|| (this._AuthorTBx.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._AuthorTBx.Entity = null;
					previousValue.BookTBxes.Remove(this);
				}
				this._AuthorTBx.Entity = value;
				if ((value != null))
				{
					value.BookTBxes.Add(this);
					this._AuthorID = value.ID;
				}
				else
				{
					this._AuthorID = default(Nullable<int>);
				}
				this.SendPropertyChanged("AuthorTBx");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ImageTBxes(ImageTBx entity)
	{
		this.SendPropertyChanging();
		entity.BookTBx = this;
	}
	
	private void detach_ImageTBxes(ImageTBx entity)
	{
		this.SendPropertyChanging();
		entity.BookTBx = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CategoryTBx")]
public partial class CategoryTBx : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private string _Desc;
	
	private System.Nullable<int> _Status;
	
	private EntitySet<Author_CategoryTBx> _Author_CategoryTBxes;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
	
	public CategoryTBx()
	{
		this._Author_CategoryTBxes = new EntitySet<Author_CategoryTBx>(new Action<Author_CategoryTBx>(this.attach_Author_CategoryTBxes), new Action<Author_CategoryTBx>(this.detach_Author_CategoryTBxes));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1000)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NVarChar(MAX)")]
	public string Desc
	{
		get
		{
			return this._Desc;
		}
		set
		{
			if ((this._Desc != value))
			{
				this.OnDescChanging(value);
				this.SendPropertyChanging();
				this._Desc = value;
				this.SendPropertyChanged("Desc");
				this.OnDescChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
	public System.Nullable<int> Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategoryTBx_Author_CategoryTBx", Storage="_Author_CategoryTBxes", ThisKey="ID", OtherKey="CategoryID")]
	public EntitySet<Author_CategoryTBx> Author_CategoryTBxes
	{
		get
		{
			return this._Author_CategoryTBxes;
		}
		set
		{
			this._Author_CategoryTBxes.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Author_CategoryTBxes(Author_CategoryTBx entity)
	{
		this.SendPropertyChanging();
		entity.CategoryTBx = this;
	}
	
	private void detach_Author_CategoryTBxes(Author_CategoryTBx entity)
	{
		this.SendPropertyChanging();
		entity.CategoryTBx = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImageTBx")]
public partial class ImageTBx : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private System.Nullable<int> _BookID;
	
	private EntityRef<BookTBx> _BookTBx;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBookIDChanging(System.Nullable<int> value);
    partial void OnBookIDChanged();
    #endregion
	
	public ImageTBx()
	{
		this._BookTBx = default(EntityRef<BookTBx>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookID", DbType="Int")]
	public System.Nullable<int> BookID
	{
		get
		{
			return this._BookID;
		}
		set
		{
			if ((this._BookID != value))
			{
				if (this._BookTBx.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBookIDChanging(value);
				this.SendPropertyChanging();
				this._BookID = value;
				this.SendPropertyChanged("BookID");
				this.OnBookIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookTBx_ImageTBx", Storage="_BookTBx", ThisKey="BookID", OtherKey="ID", IsForeignKey=true)]
	public BookTBx BookTBx
	{
		get
		{
			return this._BookTBx.Entity;
		}
		set
		{
			BookTBx previousValue = this._BookTBx.Entity;
			if (((previousValue != value) 
						|| (this._BookTBx.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._BookTBx.Entity = null;
					previousValue.ImageTBxes.Remove(this);
				}
				this._BookTBx.Entity = value;
				if ((value != null))
				{
					value.ImageTBxes.Add(this);
					this._BookID = value.ID;
				}
				else
				{
					this._BookID = default(Nullable<int>);
				}
				this.SendPropertyChanged("BookTBx");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
